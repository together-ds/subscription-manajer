# Build the native image (x86 only)

name: Manajer Docker Image(Native)

env:
  IMAGE_NAME: manajer

on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Build with NPM
        working-directory: manajer-ui
        run: |
          npm ci
          npm run build --if-present

      - name: Copy dist
        run: |
          cp -r manajer-ui/dist manajer-api/src/main/resources/static

      - name: GitHub Action for GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.7'
          distribution: 'graalvm' # See 'Options' for all available distributions
          cache: 'maven'
      - name: Echo environment
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version
          mvn --version
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set environment variables
        working-directory: manajer-api
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout --file pom.xml)" >> $GITHUB_ENV
          echo "PROJECT_NAME=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout --file pom.xml)" >> $GITHUB_ENV

      - name: Build with Maven & push to docker hub
        working-directory: manajer-api
        run: |
          mvn -DskipTests=true -Pnative spring-boot:build-image
          docker tag ${{ env.PROJECT_NAME }}:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:native-latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:native-latest
          docker tag ${{ env.PROJECT_NAME }}:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:native-${{ env.VERSION }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:native-${{ env.VERSION }}